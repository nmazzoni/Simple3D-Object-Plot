import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from itertools import product,combinations

def make_circle(point=0):
    fig=plt.gcf()
    ax=fig.add_subplot(111,aspect="equal")
    fig.gca().add_artist(plt.Circle((0,0),1,alpha=5))
    ax.scatter(0,0,s=10,c="black")
    ax.plot(np.linspace(0,1,100),np.zeros(100),c="black")
    ax.text(.4,.1,"r",size=48)
    ax.set_xlim(left=-1,right=1)
    ax.set_ylim(bottom=-1,top=1)
    plt.xlabel("Covariate A")
    plt.ylabel("Covariate B")
    plt.title("Unit Cicrle")
    
    if point:
        ax.text(.55,.9,"Far Away",c="purple")
        ax.scatter(.85,.85,c="purple")
    else:
        plt.show()
        
        
fig=plt.figure(figsize=(8,8))
ax=fig.gca(projection="3d")
r=[-1,1]
for s,e in combinations(np.array(list(product(r,r,r))),2):
    if np.sum(np.abs(s-e))==r[1]-r[0]:
        ax.plot3D(*zip(s,e))
        
u,v=np.mgrid[0:2*np.pi:20j,0:np.pi:10j]
x=np.cos(u)*np.sin(v)
y=np.sin(u)*np.sin(v)
z=np.cos(v)
ax.plot_wireframe(x,y,z,color="black")
